// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Star {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  eidtor    User     @relation(fields: [eidtorId], references: [id])
  eidtorId  String

  profile     Profile?
  socialMedia SocialMedia[]
  rate        Rate?
  category    Category[]
  comment     Comment[]
}

model Profile {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  bio       String
  video     String[]
  image     String[]
  firstName String   @db.VarChar(255)
  lastName  String   @db.VarChar(255)
  summary   String
  debutDate DateTime
  birthday  DateTime
  age       String   @db.VarChar(255)
  rate      String   @db.VarChar(255)
  star      Star     @relation(fields: [starId], references: [id])

  starId String @unique
}

model SocialMedia {
  id   String @id @default(uuid())
  name String @db.VarChar(255)
  link String @db.VarChar(255)
  logo String @db.VarChar(255)
  star Star   @relation(fields: [starId], references: [id])

  starId String @unique
}

model Rate {
  id    String @id @default(uuid())
  score String @db.VarChar(128)
  star  Star   @relation(fields: [starId], references: [id])

  starId  String @unique
  ratedBy User[]
}

model Category {
  id   String @id @default(uuid())
  name String @db.VarChar(128)
  star Star[]
}

model Comment {
  id         String   @id @default(uuid())
  createdAt  DateTime @default(now())
  content    String
  createdBy  User     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId     String
  createdFor Star     @relation(fields: [starId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  starId     String
}

model User {
  id        String    @id @default(uuid())
  email     String    @unique @db.VarChar(255)
  bio       String
  avatarUrl String    @db.VarChar(255)
  firstName String    @db.VarChar(255)
  lastName  String    @db.VarChar(255)
  star      Star[]
  rated     Rate[]
  commented Comment[]
}
